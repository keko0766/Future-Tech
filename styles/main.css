@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../fonts/KumbhSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../fonts/KumbhSans-Regular.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-SemiBlod.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-white: #fff;
  --color-dark: #141414;
  --color-dark-10: #1a1a1a;
  --color-dark-15: #262626;
  --color-dark-20: #333333;
  --color-dark-40: #666666;
  --color-gray-50: #7e7e81;
  --color-gray-60: #98989a;
  --color-accent: #ffd11a;
  --color-red: #ff5500;
  --font-family-base: "Inter", sans-serif;
  --font-family-accent: "Kumb Sans", sans-serif;
  --border: 0.0625rem solid var(--color-dark-15);
  --container-width: 100rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 80rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  min-width: auto;
  padding-inline: var(--container-padding-x);
  margin-inline: auto;
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-Lock {
  overflow-y: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7884615385rem + 0.3846153846vw, 1.125rem);
  font-family: var(--font-family-base);
  letter-spacing: -0.03em;
  color: var(--color-gray-50);
  background-color: var(--color-dark);
  display: flex;
  flex-direction: column;
}

main {
  flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  color: var(--color-light);
}

h1, .h1,
h2, .h2,
h3, .h3 {
  font-family: var(--font-family-accent);
  font-weight: 500;
}

h4, .h4,
h5, .h5,
h6, .h6 {
  font-weight: 600;
}

h1, .h1 {
  font-size: clamp(1.875rem, 1.0096153846rem + 3.8461538462vw, 4.375rem);
  line-height: 1.2;
}

h2, .h2 {
  font-size: clamp(1.75rem, 1.1009615385rem + 2.8846153846vw, 3.625rem);
  line-height: 1.3;
}

h3, .h3 {
  font-size: clamp(1.5rem, 1.1538461538rem + 1.5384615385vw, 2.5rem);
}

h4, .h4 {
  font-size: clamp(1.125rem, 0.9519230769rem + 0.7692307692vw, 1.625rem);
}

h5, .h5 {
  font-size: clamp(1.125rem, 0.9951923077rem + 0.5769230769vw, 1.5rem);
}

h6, .h6 {
  font-size: clamp(1rem, 0.9134615385rem + 0.3846153846vw, 1.25rem);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

a[aria-label],
button[aria-label] {
  position: relative;
}
a[aria-label]::before,
button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 44;
  height: 44;
  content: "";
}

.icon {
  display: inline-flex;
  align-items: center;
  column-gap: 0.625rem;
}
.icon::after {
  --size: 1.5rem;
  width: var(--size);
  height: var(--size);
  content: "";
  flex-shrink: 0;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}
@media (width <= 90.06125rem) {
  .icon::after {
    --sise: 1.25rem ;
  }
}
.icon--yellow-arrow::after {
  background-image: url("../../icons/arrow-top-right_yellow.svg");
}

.logo {
  max-width: clamp(7.875rem, 6.7283653846rem + 5.0961538462vw, 11.1875rem);
}

.button {
  border: var(--border);
  border-radius: 0.75rem;
  padding: 1.125rem 1.5rem;
  font-size: 1.125rem;
  color: var(--grey-60);
  background-color: var(--color-dark);
  white-space: nowrap;
}
@media (width <= 90.06125rem) {
  .button {
    padding: 0.875rem 1.25rem;
    font-size: 0.875rem;
    border-radius: 0.5rem;
  }
}
.button.button--accent {
  background-color: var(--color-accent);
  color: var(--color-dark);
  padding: 0.875rem 1.25rem;
  font-weight: 500;
  border-radius: 0.5rem;
}
@media (any-hover: hover) {
  .button:hover {
    color: var(--color-accent);
    background-color: var(--color-dark-10);
    border-color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .button:active {
    color: var(--color-accent);
    background-color: var(--color-dark-10);
    border-color: var(--color-accent);
  }
}

.burger-button {
  width: 2.125rem;
  height: 2.125rem;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  background-color: transparent;
  color: var(--color-white);
  border: none;
  align-items: flex-end;
}
@media (any-hover: hover) {
  .burger-button:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .burger-button:active {
    color: var(--color-accent);
  }
}
.burger-button__line {
  height: 0.125rem;
  width: 100%;
  background-color: currentColor;
  border-radius: 0.125rem;
  transition: all var(--transition-duration) ease-in-out;
}
.burger-button__line:last-child {
  width: 60%;
}
.burger-button.is-active .burger-button__line:first-child {
  rotate: 45deg;
  transform-origin: 0;
  translate: 0.25em 0.1em;
}
.burger-button.is-active .burger-button__line:nth-child(2) {
  rotate: -45deg;
}
.burger-button.is-active .burger-button__line:last-child {
  width: 0;
}

.header {
  position: sticky;
  top: 0;
  animation-name: scrolling-header;
  animation-fill-mode: both;
  animation-timeline: scroll();
  animation-range: 6.25rem 12.5rem;
}
@keyframes scrolling-header {
  to {
    box-shadow: 0 0 2rem 0 var(--color-dark);
  }
}
.header__promo {
  padding-block: 1.25rem;
  text-align: center;
  border-bottom: var(--border);
  background-color: var(--color-dark);
}
@media (width <= 47.99875rem) {
  .header__promo {
    padding-block: 0.875rem;
  }
}
.header__body {
  padding-block: 1.5rem;
  background-color: var(--color-dark-10);
}
.header__body-inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@media (width <= 47.99875rem) {
  .header__body {
    padding-block: 1.25rem;
  }
}
@media (width > 47.99875rem) {
  .header__overlay {
    display: contents;
  }
}
@media (width <= 47.99875rem) {
  .header__overlay {
    position: fixed;
    inset: 0;
    padding: 1rem;
    background-color: var(--color-dark-10);
    transition-duration: var(--transition-duration);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 3rem;
  }
  .header__overlay:not(.is-active) {
    opacity: 0;
    visibility: hidden;
    translate: 100%;
  }
}
@media (width <= 47.99875rem) {
  .header__menu {
    overflow-y: auto;
  }
}
.header__menu-list {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
  column-gap: 1rem;
}
@media (width <= 90.06125rem) {
  .header__menu-list {
    column-gap: 0.375rem;
  }
}
@media (width <= 47.99875rem) {
  .header__menu-list {
    flex-direction: column;
    row-gap: 1rem;
  }
}
.header__menu-link {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.625rem;
  padding: 0.875rem 1.5rem;
}
.header__menu-link.is-active {
  font-weight: 500;
  border: var(--border);
  background-color: var(--color-dark);
  color: var(--color-white);
  pointer-events: none;
}
@media (width <= 47.99875rem) {
  .header__menu-link {
    width: 300px;
  }
}
@media (width <= 47.99875rem) {
  .header__contact-us-link {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
  }
}

/*# sourceMappingURL=main.css.map */
